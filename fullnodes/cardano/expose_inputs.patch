diff --git a/explorer/src/Pos/Explorer/Web/ClientTypes.hs b/explorer/src/Pos/Explorer/Web/ClientTypes.hs
index f217765f4..768e99872 100644
--- a/explorer/src/Pos/Explorer/Web/ClientTypes.hs
+++ b/explorer/src/Pos/Explorer/Web/ClientTypes.hs
@@ -74,8 +74,8 @@ import           Pos.Binary (biSize)
 import           Pos.Chain.Block (MainBlock, Undo (..), gbHeader, gbhConsensus,
                      headerHash, mainBlockSlot, mainBlockTxPayload, mcdSlot,
                      prevBlockL)
-import           Pos.Chain.Txp (Tx (..), TxId, TxOut (..), TxOutAux (..),
-                     TxUndo, txpTxs, _txOutputs)
+import           Pos.Chain.Txp (Tx (..), TxId, TxIn (..), TxOut (..),
+                     TxOutAux (..), TxUndo, txpTxs, _txOutputs)
 import           Pos.Core (Address, Coin, EpochIndex, LocalSlotIndex, SlotCount,
                      SlotId (..), StakeholderId, Timestamp, addressF,
                      coinToInteger, decodeTextAddress, getEpochIndex,
@@ -318,7 +318,7 @@ data CAddressSummary = CAddressSummary
 data CTxBrief = CTxBrief
     { ctbId         :: !CTxId
     , ctbTimeIssued :: !(Maybe POSIXTime)
-    , ctbInputs     :: ![Maybe (CAddress, CCoin)]
+    , ctbInputs     :: ![Maybe (CTxId, Word, CAddress, CCoin)]
     , ctbOutputs    :: ![(CAddress, CCoin)]
     , ctbInputSum   :: !CCoin
     , ctbOutputSum  :: !CCoin
@@ -426,6 +426,19 @@ tiToTxEntry txi@TxInternal{..} = toTxEntry (tiTimestamp txi) tiTx
 convertTxOutputsMB :: [Maybe TxOut] -> [Maybe (CAddress, Coin)]
 convertTxOutputsMB = map (fmap $ toCAddress . txOutAddress &&& txOutValue)
 
+convertTxInMB :: (TxIn, Maybe TxOutAux) ->  Maybe (CTxId, Word, CAddress, CCoin)
+convertTxInMB (txin, Just outAux) = convertTxIn (txin, outAux)
+convertTxInMB _                   = Nothing
+
+convertTxIn :: (TxIn, TxOutAux) -> Maybe (CTxId, Word, CAddress, CCoin)
+convertTxIn ((TxInUtxo txInHash txInIndex), txOutAux) = Just (cId, cOutIndex, cAddress, cCoins)
+  where
+    cId = toCTxId txInHash
+    cOutIndex = fromIntegral txInIndex
+    cAddress = toCAddress . txOutAddress . toaOut $ txOutAux
+    cCoins = mkCCoin (txOutValue . toaOut $ txOutAux)
+convertTxIn _ = Nothing
+
 convertTxOutputs :: [TxOut] -> [(CAddress, Coin)]
 convertTxOutputs = map (toCAddress . txOutAddress &&& txOutValue)
 
@@ -436,7 +449,10 @@ toTxBrief txi = CTxBrief {..}
     ts            = tiTimestamp txi
     ctbId         = toCTxId $ hash tx
     ctbTimeIssued = timestampToPosix <$> ts
-    ctbInputs     = map (fmap (second mkCCoin)) txInputsMB
+    txIns         = NE.toList $ _txInputs tx
+    txOutAuxsMB   = NE.toList $ teInputOutputs (tiExtra txi)
+    zipped        = zip txIns txOutAuxsMB
+    ctbInputs     = fmap convertTxInMB zipped
     ctbOutputs    = map (second mkCCoin) txOutputs
     ctbInputSum   = sumCoinOfInputsOutputs txInputsMB
     ctbOutputSum  = sumCoinOfInputsOutputs $ map Just txOutputs
diff --git a/explorer/src/Pos/Explorer/Web/TestServer.hs b/explorer/src/Pos/Explorer/Web/TestServer.hs
index 784b63657..6a46abff6 100644
--- a/explorer/src/Pos/Explorer/Web/TestServer.hs
+++ b/explorer/src/Pos/Explorer/Web/TestServer.hs
@@ -98,7 +98,7 @@ cTxBrief :: CTxBrief
 cTxBrief = CTxBrief
     { ctbId         = cTxId
     , ctbTimeIssued = Just posixTime
-    , ctbInputs     = [Just (CAddress "1fi9sA3pRt8bKVibdun57iyWG9VsWZscgQigSik6RHoF5Mv", mkCCoin $ mkCoin 33333), Nothing]
+    , ctbInputs     = [Just (cTxId, 0, CAddress "1fi9sA3pRt8bKVibdun57iyWG9VsWZscgQigSik6RHoF5Mv", mkCCoin $ mkCoin 33333), Nothing]
     , ctbOutputs    = [(CAddress "1fSCHaQhy6L7Rfjn9xR2Y5H7ZKkzKLMXKYLyZvwWVffQwkQ", mkCCoin $ mkCoin 33333)]
     , ctbInputSum   = mkCCoin $ mkCoin 33333
     , ctbOutputSum  = mkCCoin $ mkCoin 33333
